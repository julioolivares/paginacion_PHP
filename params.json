{"name":"Paginacion php","tagline":"Clase para crear paginaciones de registros personalizadas con un mínimo de código ","body":"# paginacion_PHP\r\n### Clase para crear paginaciones de registros personalizadas con un mínimo de código:\r\n\r\nEs una completa clase que permite crear patinadores de resultados a consultas de base de datos, e interactuar con los mismos mediante una paremetrizacion inicial simple que solo requiere iniciar mínimo cuatro parámetros $config['url_paginada'], $config['total_registros'], $config['enlaces_x_pagina'], $config['registros_x_pagina'] para crear los enlaces.\r\n\r\n**$config['url_paginada'];** (Tipo Cadena)\r\n\r\nLa url donde se usara la paginación, la misma tiene el siguiente prototipo http://localhost/ver_pagina/1\r\n\r\nDonde Ver_pagina es la funcion del controlador que se muestra la vista y recibe como parámetro el número de página que retorna la paginación con la función CrearPaginacion($pagina).\r\n\r\n**$config['total_registros'];** (Tipo Entero ) Correspondiente al total de registros que retorna la consulta a la base de datos.( Num_rows()).\r\n\r\n**$config['enlaces_x_pagina'];** (Tipo Entero ) Corresponde al número de enlaces paginadores a mostrar por pagina\r\n\r\n**$config['registros_x_pagina'];** (Tipo Entero ) Corresponde al número de registros a mostrar por página\r\n\r\nPara crear la paginación previamente se debe consultar el total de registros que se mostraran por ejemplo seria realizar un count(*) a la tabla bajo los criterios particulares según el caso, luego tomar ese resultado para pasarlo como parámetro al objeto Paginación:\r\n\r\n`$result = Count(‘id’) as cantidad from tabla where cliente = 1 and estado = 1;\r\n$total_registros = $result->cantidad //es solo un ejemplo que variara según el entorno de BD.`\r\n\r\n`/* //Un ejemplo real usando Codeigniter y Msqly: $resultado = $this->db->select(“Count(id) as cantidad”)->from(“table”)->where(“cliente = 1 and estado = 1”);`\r\n`$fila = $resultado->row(); $total_registros = $row->cantidad; */`\r\n\r\n`$config['url_paginada'] =’ http://localhost/sitio/funcion_mostrar_registros’; $config['total_registros'] = $total_registros; $config['registros_x_pagina'] = 5; $config['enlaces_x_pagina'] = 10;`\r\n\r\n`$Paginacion = new Paginacion($config);`\r\n\r\n`$link_paginacion = $paginacion->CrearPaginacion($pagina);`\r\n![Ejemplo Paginación  ](https://dl.dropboxusercontent.com/u/70632912/Ejemplo%20paginacion.PNG)\r\n***\r\n## Donde $pagina debe ser el parámetro que recibe la función que retorna los datos por ejemplo:\r\n\r\n`Public function ver_pagina($pagina = NULL) ` \r\n  `{ \r\n    $resultado = $this->db->select(“Count(id) as cantidad”)->from(“table”)->where(“cliente = 1 and estado = 1”);` \r\n    `$config['registros_x_pagina'] = 5;`\r\n    `$config['enlaces_x_pagina']   = 10;` \r\n    `$config['total_registros']    = $total_registros;` \r\n    `$config['url_paginada']       =’ http://localhost/sitio/funcion_mostrar_registros’;` \r\n    `$Paginacion                   = new Paginacion($config);` \r\n    `$fila                         = $resultado->row(); $total_registros = $row->cantidad;` \r\n    `$link_paginacion              = $paginacion->CrearPaginacion($pagina); //el HTML ya formateado y configurado` \r\n  `//Luego sería ya imprimir el resultado y $link_paginacion` \r\n `}` \r\n\r\n\r\n ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}